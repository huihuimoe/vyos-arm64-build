name: VyOS arm64 build

on:
  schedule:
    - cron: "0 1 * * 5"

  workflow_dispatch:
    inputs:
      BUILD_BY:
        description: 'Builder identifier (default: autobuild@vyos.net)'
        default: ''
      build_version:
        description: 'Version number (default: 1.5-rolling-ISO8601-TIMESTAMP)'
        default: ''

env:
  BUILD_BY: github@huihui.contact
  DEBIAN_MIRROR: http://deb.debian.org/debian/
  DEBIAN_SECURITY_MIRROR: http://deb.debian.org/debian-security
  VYOS_MIRROR: https://packages.vyos.net/repositories/current/
  # this repo doesn't seem to be updated anymore
  # https://dev.packages.vyos.net/?dir=repositories/current/dists/current
  # VYOS_MIRROR: https://rolling-packages.vyos.net/current/

jobs:
  build_generic_iso:
    runs-on: ubuntu-24.04-arm
    if: github.repository == 'huihuimoe/vyos-arm64-build'
    permissions:
      contents: write
    container:
      image: vyos/vyos-build:current-arm64
      options: --sysctl net.ipv6.conf.lo.disable_ipv6=0 --privileged --user root
    defaults:
      run:
        shell: bash
    outputs:
      BUILD_BY: ${{ steps.set_env_variables.outputs.BUILD_BY }}
      build_version: ${{ steps.set_env_variables.outputs.build_version }}
      TIMESTAMP: ${{ steps.set_env_variables.outputs.TIMESTAMP }}
      PREVIOUS_SUCCESS_BUILD_TIMESTAMP: ${{ steps.set_env_variables.outputs.PREVIOUS_SUCCESS_BUILD_TIMESTAMP }}
      generic_image_iso: ${{ steps.build_generic_iso.outputs.generic_image_iso }}
      generic_image_name: ${{ steps.build_generic_iso.outputs.generic_image_name }}

    steps:
      ### Initialization ###
      - name: Install Dependencies
        run: |
          # Install missing packages
          apt-get update -qq
          apt-get install -y \
            git-lfs libglib2.0-dev libip4tc-dev libipset-dev libnfnetlink-dev bubblewrap \
            libnftnl-dev libnl-nf-3-dev libpopt-dev libsystemd-dev perl-xs-dev \
            kpartx clang llvm libpcap-dev xz-utils python-is-python3 libbpf-dev linux-libc-dev

      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: "Initialization: set env variables"
        id: set_env_variables
        run: |
          set -x
          if [ -n "${{ github.event.inputs.BUILD_BY }}" ]; then
            echo "BUILD_BY=${{ github.event.inputs.BUILD_BY }}" >> $GITHUB_ENV
          fi
          if [ -z "${{ github.event.inputs.build_version }}" ]; then
            echo "build_version=1.5-rolling-$(date -u +%Y%m%d%H%M)" >> $GITHUB_OUTPUT
          else
            echo "build_version=${{ github.event.inputs.build_version }}" >> $GITHUB_OUTPUT
          fi
          echo "TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
          echo "PREVIOUS_SUCCESS_BUILD_TIMESTAMP=$(cat version.json | jq -r '.[0].timestamp')" >> $GITHUB_OUTPUT
          echo "BUILD_BY=$BUILD_BY" >> $GITHUB_OUTPUT

      - name: Build global deps
        run: |
          set -x
          source $HOME/.bashrc
          eval $(opam env --root=/opt/opam --set-root)
          mkdir global_deps
          cd global_deps
          global_deps=(
            libvyosconfig
            vyatta-bash
            vyatta-biosdevname
            vyatta-cfg
            vyatta-wanloadbalance
            vyos-utils
            vyos-user-utils
            vyos-http-api-tools
            ipaddrcheck
            udp-broadcast-relay
            libnss-mapuser
            hvinfo
            live-boot
          )
          for global_dep in ${global_deps[@]}; do
            git clone https://github.com/vyos/$global_dep
            cd $global_dep

            if [ "${global_dep}" = "ipaddrcheck" ]; then
              rm src/*.o
            fi
            echo "y" | mk-build-deps --install --remove

            # should update libvyosconfig due to hardcode on vyos-1x
            # https://github.com/vyos/vyos-1x/blob/e90a2781f9eae555097e078b9b11dd0dca6c0acd/python/vyos/configtree.py#L22
            # that will failed on reftree.cache
            if [ "${global_dep}" = "libvyosconfig" ]; then
              ./build.sh
              cp _build/libvyosconfig.so /usr/lib/libvyosconfig.so.0
            fi

            dpkg-buildpackage -b -us -uc -tc
            cd ..
          done

      - name: Checkout vyos-build repo
        uses: actions/checkout@v4
        with:
          repository: vyos/vyos-build
          path: vyos-build

      # fixing unknown internal blob file
      # i don't know what is this file and why it's not in the repo
      # without this file, the build will failed
      # https://github.com/vyos/vyos-1x/commit/bab186b493145ee42453196e8ef4670afc71f6f1
      # https://github.com/vyos/vyos-1x/commit/dd5f9c19550c1f8ccb5e93bab0b604f9f9e1383e
      - name: Fix missing internal blob file
        run: |
          set -x
          source $HOME/.bashrc
          git clone --recursive https://github.com/vyos/vyos-1x \
            -b current --single-branch vyos-build/scripts/package-build/vyos-1x/vyos-1x
          cp data/reftree.cache vyos-build/scripts/package-build/vyos-1x/vyos-1x/data/reftree.cache

      - name: Build Image Packages
        run: |
          cd vyos-build/scripts/package-build
          set -x
          source $HOME/.bashrc
          packages=$(ls .)
          ignore_packages=(amazon-cloudwatch-agent amazon-ssm-agent xen-guest-agent)
          for package in $packages; do
            [ ! -d $package ] && continue
            [[ " ${ignore_packages[@]} " =~ " ${package} " ]] && continue
            cd $package

            if [ $package == "keepalived" ]; then
              apt-get install -y libsnmp-dev
            fi

            ./build.py

            if [ $package == "keepalived" ]; then
              apt-get remove -y libsnmp-dev
            fi

            # clean
            df -Th
            apt-get autoremove -y
            rm -rf $package *.gz *.xz $HOME/.cache/go-build $HOME/go/pkg/mod $HOME/.rustup
            df -Th
            cd ..
          done

      - name: Apply Packages
        run: |
          cd vyos-build
          set -x
          source $HOME/.bashrc
          # seems donot need filtering needed here, the build sciprt will install only the necessary packages
          deb_files=$(find scripts/package-build -name "*.deb" -type f | \
            grep -v -- -dbg | \
            grep -v -- -dev | \
            grep -v -- -doc
          )
          ignore_packages=(
            charon-cmd
            dropbear-initramfs
            dropbear-run
            eapoltest
            frr-test-tools
            isc-dhcp-client-ddns
            isc-dhcp-common
            isc-dhcp-keama
            isc-dhcp-server
            isc-dhcp-server-ldap
            libnetsnmptrapd40
            libsnmp-perl
            libtac2-bin
            libyang-modules
            libyang-tools
            # python3-nftables
            rtr-tools
            sflowovsd.deb
            snmptrapd
            strongswan-nm
            strongswan-pki
            tkmib
            waagent
            wide-dhcpv6-relay
            wide-dhcpv6-server
            vpp-plugin-devtools
            linux-headers
          )
          for deb_file in $deb_files; do
            if [[ " ${ignore_packages[@]} " =~ " $(basename $deb_file | cut -d_ -f1) " ]]; then
              echo "ignore $deb_file"
              continue
            fi
            cp $deb_file packages
          done
          global_deb_files=$(find ../global_deps -name "*.deb" -type f | \
            grep -v -- -dbg | \
            grep -v -- -dev | \
            grep -v -- -doc
          )
          for deb_file in $global_deb_files; do
            cp $deb_file packages
          done
          # vpp addition files
          find scripts/package-build/vpp -name "libvppinfra-dev*.deb" -type f -exec cp {} packages ';'
          find scripts/package-build/vpp -name "vpp-dev*.deb" -type f -exec cp {} packages ';'

          ls -alh packages

      - name: Build generic ISO image
        id: build_generic_iso
        run: |
          cd vyos-build
          set -x
          source $HOME/.bashrc

          # setup db directory for vnstat
          echo '[[includes_chroot]]' >> data/build-flavors/generic.toml
          echo 'path = "etc/vnstat.conf"' >> data/build-flavors/generic.toml
          echo "data = 'DatabaseDir \"/config/user-data/vnstat\"'" >> data/build-flavors/generic.toml

          # seems only have 6.6.52 kernel for now
          # https://dev.packages.vyos.net/?dir=repositories/current/pool/main/l/linux-upstream
          #sed -i 's|kernel_version = .*|kernel_version = "6.6.52"|g' data/defaults.toml

          # fix url of saltproject
          # https://github.com/vyos/vyos-build/blob/current/data/architectures/arm64.toml#L9
          sed -i 's|amd64|arm64|g' data/architectures/arm64.toml

          # Add required telegraf key
          #wget -q https://repos.influxdata.com/influxdata-archive_compat.key -O \
          #  data/live-build-config/archives/influxdata.key.chroot
          # build-vyos-image with args
          #  --custom-apt-entry "deb [arch=arm64] https://repos.influxdata.com/debian/ bookworm stable" \

          ./build-vyos-image \
            --architecture arm64 \
            --build-by $BUILD_BY \
            --build-type release \
            --debian-mirror $DEBIAN_MIRROR \
            --debian-security-mirror $DEBIAN_SECURITY_MIRROR \
            --version ${{ steps.set_env_variables.outputs.build_version }} \
            --vyos-mirror $VYOS_MIRROR \
            --custom-package vim-tiny \
            --custom-package vnstat \
            --custom-package neofetch \
            --custom-package tree \
            --custom-package btop \
            --custom-package ripgrep \
            generic
          cd build
          # Determine image name and iso file
          GENERIC_IMAGE_NAME=$(jq --raw-output .artifacts[0] manifest.json | sed -e 's/.iso//')
          GENERIC_IMAGE_ISO=$(jq --raw-output .artifacts[0] manifest.json)
          echo "generic_image_name=${GENERIC_IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "generic_image_iso=${GENERIC_IMAGE_ISO}" >> $GITHUB_OUTPUT
          sha1sum ${GENERIC_IMAGE_ISO} > ${GENERIC_IMAGE_ISO}.sha1sum
          # Move artifacts to workspace to avoid nested path in artifact archive
          mv manifest.json ${GENERIC_IMAGE_ISO} ${GENERIC_IMAGE_ISO}.sha1sum $GITHUB_WORKSPACE

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build_generic_iso.outputs.generic_image_name }}
          path: |
            manifest.json
            ${{ steps.build_generic_iso.outputs.generic_image_iso }}
            ${{ steps.build_generic_iso.outputs.generic_image_iso }}.sha1sum
          retention-days: 15
          if-no-files-found: error

  publish:
    needs:
      - build_generic_iso
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    if: github.ref_name == 'master'
    steps:
      - uses: actions/checkout@v4
      - name: Clone vyos-build repo
        uses: actions/checkout@v4
        with:
          repository: vyos/vyos-build
          path: vyos-build
      - name: Clone vyos-1x source code
        uses: actions/checkout@v4
        with:
          repository: vyos/vyos-1x
          path: vyos-1x
      -  id: commit_ids
         shell: bash
         run: |
          cd vyos-build
          echo "CHANGELOG_COMMIT_VYOS_BUILD=$(git log --since "${{ needs.build_generic_iso.outputs.PREVIOUS_SUCCESS_BUILD_TIMESTAMP }}" --format="%H" --reverse | head -n1)" >> $GITHUB_OUTPUT
          cd ../vyos-1x
          echo "CHANGELOG_COMMIT_VYOS_1X=$(git log --since "${{ needs.build_generic_iso.outputs.PREVIOUS_SUCCESS_BUILD_TIMESTAMP }}" --format="%H" --reverse | head -n1)" >> $GITHUB_OUTPUT

      - name: "Release publishing: generate changelog for vyos-1x"
        id: generate_changelog_for_vyos-1x
        uses: mikepenz/release-changelog-builder-action@v5.1.0
        with:
          owner: "vyos"
          repo: "vyos-1x"
          fetchReviewers: false
          fromTag: ${{ steps.commit_ids.outputs.CHANGELOG_COMMIT_VYOS_1X }}
          toTag: HEAD
          configurationJson: |
            {
              "categories": [{"title": "", "labels": []}],
              "template": "#{{CHANGELOG}}",
              "pr_template": "- #{{TITLE}}\n   - PR: vyos/vyos-1x##{{NUMBER}}"
            }

      - name: "Release publishing: generate changelog for vyos-build"
        id: generate_changelog_for_vyos-build
        uses: mikepenz/release-changelog-builder-action@v5.1.0
        with:
          owner: "vyos"
          repo: "vyos-build"
          fetchReviewers: false
          fromTag: ${{ steps.commit_ids.outputs.CHANGELOG_COMMIT_VYOS_BUILD }}
          toTag: HEAD
          configurationJson: |
            {
              "categories": [{"title": "", "labels": []}],
              "template": "#{{CHANGELOG}}",
              "pr_template": "- #{{TITLE}}\n   - PR: vyos/vyos-build##{{NUMBER}}"
            }

      - name: "Release publishing: generate CHANGELOG.md"
        run: |
          cat <<EOF > CHANGELOG.md
          ## vyos-1x
          ${{ steps.generate_changelog_for_vyos-1x.outputs.changelog }}
          ## vyos-build
          ${{ steps.generate_changelog_for_vyos-build.outputs.changelog }}
          EOF
          cat CHANGELOG.md

      - name: "Release publishing: create version.json"
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "version.json"
          json: |
            [
              {
                "url": "https://github.com/huihuimoe/vyos-arm64-build/releases/download/${{ needs.build_generic_iso.outputs.build_version }}/${{ needs.build_generic_iso.outputs.generic_image_iso }}",
                "version": "${{ needs.build_generic_iso.outputs.build_version }}",
                "timestamp": "${{ needs.build_generic_iso.outputs.TIMESTAMP }}"
              }
            ]

      - name: "Release publishing: check if the repository was modified during runtime to prevent autocommit failure"
        id: check_if_the_repository_was_modified_during_runtime
        run: |
          sudo chown -R $(whoami):$(whoami) ./*
          git pull --autostash --rebase

      - name: "Release publishing: create autocommit and tag"
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          tagging_message: ${{ needs.build_generic_iso.outputs.build_version }}
          commit_message: ${{ needs.build_generic_iso.outputs.build_version }}
          commit_author: "vyosbot <${{ needs.build_generic_iso.outputs.BUILD_BY }}>"

      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build_generic_iso.outputs.generic_image_name }}

      - name: "Release publishing: publish release"
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG.md
          tag_name: ${{ needs.build_generic_iso.outputs.build_version }}
          fail_on_unmatched_files: true
          files: |
            ${{ needs.build_generic_iso.outputs.generic_image_iso }}
            ${{ needs.build_generic_iso.outputs.generic_image_iso }}.sha1sum

      - uses: Nats-ji/delete-old-releases@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          keep-count: 10
          keep-old-minor-releases: false
